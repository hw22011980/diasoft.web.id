{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/util/camera-util.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","cameraUtil","cameras","current","cameras$","asObservable","current$","hasCameras$","pipe","length","streaming$","stopped$","streaming","getAvailable","subscribe","start","next","console","error","complete","stop","cameraId","getStream","stream","video","nativeElement","srcObject","play","track","getTracks","load","capture","snapshot","videoBCR","getBoundingClientRect","ctx","getContext","drawImage","width","height","img","Image","src","toDataURL","className","prepend","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","Camera","CameraUtilService","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","map","index","camera","deviceId","title","label","getUserMedia","peerIdentity","audio","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Camera, CameraUtilService } from './core/util/camera-util.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n  private stream: MediaStream;\r\n\r\n  private cameras: BehaviorSubject<Camera[]> = new BehaviorSubject([]);\r\n  private current: BehaviorSubject<string> = new BehaviorSubject(null);\r\n\r\n  cameras$: Observable<Camera[]> = this.cameras.asObservable();\r\n  current$: Observable<string> = this.current.asObservable();\r\n\r\n  hasCameras$: Observable<boolean> = this.cameras$.pipe(map(cameras => cameras && cameras.length > 0));\r\n  streaming$: Observable<boolean> = this.current$.pipe(map(current => !!current));\r\n  stopped$: Observable<boolean> = this.streaming$.pipe(map(streaming => !streaming));\r\n\r\n  @ViewChild('video') video: ElementRef<HTMLVideoElement>;\r\n  @ViewChild('capture') capture: ElementRef<HTMLCanvasElement>;\r\n  @ViewChild('snapshot') snapshot: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(private cameraUtil: CameraUtilService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cameraUtil.getAvailable().subscribe(cameras => {\r\n      if (cameras && cameras.length > 0) {\r\n        this.start(cameras[0].id);\r\n      }\r\n      this.cameras.next(cameras || []);\r\n    }, console.error);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.cameras.complete();\r\n    this.current.complete();\r\n    this.stop();\r\n  }\r\n\r\n  start(cameraId: string): void {\r\n    this.stop();\r\n    this.cameraUtil.getStream(cameraId).subscribe((stream: MediaStream) => {\r\n      this.stream = stream;\r\n      this.video.nativeElement.srcObject = stream;\r\n      this.video.nativeElement.play();\r\n      this.current.next(cameraId);\r\n    });\r\n  }\r\n\r\n  stop(): void {\r\n    if (!this.stream) {\r\n      return;\r\n    }\r\n    const track = this.stream.getTracks()[0];\r\n    track.stop();\r\n    this.video.nativeElement.load();\r\n    this.current.next(null);\r\n\r\n    this.stream = null;\r\n  }\r\n\r\n  snap(): void {\r\n    if (!this.stream) {\r\n      return;\r\n    }\r\n\r\n    const capture = this.capture.nativeElement;\r\n    const snapshot = this.snapshot.nativeElement;\r\n\r\n    const videoBCR = this.video.nativeElement.getBoundingClientRect();\r\n\r\n    const ctx = capture.getContext('2d');\r\n    ctx.drawImage(this.video.nativeElement, 0, 0, capture.width, capture.height);\r\n\r\n    const img = new Image();\r\n    img.src = capture.toDataURL('image/png');\r\n    img.width = videoBCR.width / 2;\r\n    img.height = videoBCR.height / 2;\r\n    img.className = `rounded d-inline mb-3 mr-2`;\r\n\r\n    snapshot.prepend(img);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h1 class=\"text-center mt-4 mb-4\">WebCam Example</h1>\r\n\r\n  <div class=\"row mb-5\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body d-flex justify-content-center\">\r\n          <video class=\"rounded-lg bg-light\" height=\"400\" #video></video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mb-5\">\r\n    <div class=\"col-12 text-center\" *ngIf=\"hasCameras$|async;else noCamerasAlert\">\r\n      <ng-container *ngFor=\"let camera of cameras$|async\">\r\n        <button class=\"btn btn-primary mr-2 mb-2\" [disabled]=\"(current$|async)===camera.id\" (click)=\"start(camera.id)\">\r\n          START {{camera.title}}\r\n        </button>\r\n      </ng-container>\r\n      <button class=\"btn btn-danger mr-2 mb-2\" [disabled]=\"stopped$|async\" (click)=\"stop()\">\r\n        Turn off\r\n      </button>\r\n      <button class=\"btn btn-secondary mb-2\" [disabled]=\"stopped$|async\" (click)=\"snap()\">\r\n        Take a snap\r\n      </button>\r\n    </div>\r\n    <ng-template #noCamerasAlert>\r\n      <div class=\"col-12\">\r\n        <div class=\"alert alert-warning\">\r\n          No cameras available. Please plug-in your camera.\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n\r\n  <canvas class=\"d-none\" #capture></canvas>\r\n\r\n  <div class=\"row mb-5\" *ngIf=\"hasCameras$|async\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body text-center\">\r\n          <div class=\"w-100 overflow-auto text-nowrap\" #snapshot></div>\r\n          <p class=\"text-muted small mt-0 mb-0\">Press 'Take a snap' to take a camera stream snapshot</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"fixed-bottom\">\r\n  <p class=\"text-muted small text-right mb-0 p-2\">\r\n    Snapshots are only append to DOM and they are not sent to any server\r\n  </p>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class Camera {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CameraUtilService {\r\n\r\n  getAvailable(): Observable<Camera[]> {\r\n    return from(navigator.mediaDevices.enumerateDevices()).pipe(\r\n      map((devices: any[]) => devices\r\n        .filter(device => device.kind === 'videoinput')\r\n        .map((device, index) => {\r\n          const camera = new Camera();\r\n          camera.id = device.deviceId;\r\n          camera.title = device.label || `Camera ${index + 1}`;\r\n          return camera;\r\n        }))\r\n    );\r\n  }\r\n\r\n  getStream(cameraId: string): Observable<MediaStream> {\r\n    return from(navigator.mediaDevices.getUserMedia({peerIdentity: cameraId, video: true, audio: false}));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}