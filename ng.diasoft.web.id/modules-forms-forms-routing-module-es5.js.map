{"version":3,"sources":["webpack:///src/modules/forms/components/ng-bootstrap-table/ng-bootstrap-table.component.html","webpack:///src/modules/forms/components/sort-icon/sort-icon.component.html","webpack:///src/modules/forms/containers/tables/tables.component.html","webpack:///src/modules/forms/components/index.ts","webpack:///src/modules/forms/components/ng-bootstrap-table/ng-bootstrap-table.component.scss","webpack:///src/modules/forms/components/ng-bootstrap-table/ng-bootstrap-table.component.ts","webpack:///src/modules/forms/components/sort-icon/sort-icon.component.scss","webpack:///src/modules/forms/components/sort-icon/sort-icon.component.ts","webpack:///src/modules/forms/containers/index.ts","webpack:///src/modules/forms/containers/tables/tables.component.scss","webpack:///src/modules/forms/containers/tables/tables.component.ts","webpack:///src/modules/forms/directives/index.ts","webpack:///src/modules/forms/directives/sortable.directive.ts","webpack:///src/modules/forms/forms-routing.module.ts","webpack:///src/modules/forms/forms.module.ts","webpack:///src/modules/forms/guards/index.ts","webpack:///src/modules/forms/guards/tables.guard.ts","webpack:///src/modules/forms/services/data.service.ts","webpack:///src/modules/forms/services/index.ts","webpack:///src/modules/forms/services/tables.service.ts"],"names":["components","NgBootstrapTableComponent","router","activatedRoute","param","coreService","dataService","changeDetectorRef","pageSize","titles","columns","metadata","baseURL","ngOnInit","idmenu","GetIdmenu","url","splitted","split","length","id","sessionStorage","setItem","getItem","json","toString","md","JSON","parse","form","SubStageFormArray","fa","get","arrValids","vals","values","find","o","parseInt","i","item","push","name","receiveFunctionEvent","subscribe","p","op","btnStatus","mode","isEditing","isNew","GetMetaData","then","data","updateOn","data$","total$","getBaseURL","column","direction","sortedColumn","sortedDirection","sortColumn","sortDirection","detectChanges","array","value","stringify","onSave","route","navigate","Save","console","log","indexNo","selector","changeDetection","OnPush","template","SortIconComponent","containers","TablesComponent","events","pipe","event","e","navId","pars","temp","includes","sendFunctionEvent","CanGetData","Title","title","Description","description","directives","rotate","asc","desc","SBSortableHeaderDirective","sort","emit","sbSortable","ROUTES1","path","canActivate","component","breadcrumbs","text","link","active","FormsRoutingModule","Data","localStorage","Route","children","imports","forChild","exports","FormModule","providers","declarations","guards","TablesGuard","compare","v1","v2","a","b","res","matches","country","term","toLowerCase","transform","area","population","DataService","_loading$","_search$","_data$","_total$","_state","page","searchTerm","next","_search","result","total","patch","Object","assign","filter","d","slice","asObservable","_set","providedIn","services","DetailsService"],"mappings":"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","file":"modules-forms-forms-routing-module-es5.js","sourcesContent":["export default \"<div  *ngIf='(metadata.length >0) || (1==1)'>\\r\\n<form (ngSubmit)=\\\"onSubmit(form)\\\" [formGroup]=\\\"form\\\" >\\r\\n\\r\\n    <div class=\\\"container text-right p-2\\\">\\r\\n        <button type=\\\"button\\\" *ngIf=\\\"btnStatus.mode=='view'\\\" class=\\\"btn btn-primary custom r-5\\\" (click)=\\\"onEdit()\\\" [disabled]=\\\"false\\\" [hidden]=\\\"false\\\">Edit</button>&nbsp;\\r\\n        <button type=\\\"button\\\" *ngIf=\\\"btnStatus.mode=='view'\\\" class=\\\"btn btn-success custom r-5\\\" (click)=\\\"onDelete()\\\" [disabled]=\\\"false\\\" [hidden]=\\\"false\\\">Delete</button>&nbsp;\\r\\n        <button type=\\\"submit\\\" *ngIf=\\\"btnStatus.isEditing\\\" (click)=\\\"onSubmit(form)\\\" class=\\\"btn btn-success custom r-5\\\" [disabled]=\\\"false\\\">&nbsp;\\r\\n            <span *ngIf=\\\"this.loadbtnShow\\\" id=\\\"spinbutton\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>  \\r\\n            Save\\r\\n        </button>&nbsp; \\r\\n        <button type=\\\"button\\\" id=\\\"cancel\\\" *ngIf=\\\"btnStatus.isEditing\\\" [disabled]=\\\"false\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-mdprimary custom r-5\\\">Cancel</button>&nbsp;\\r\\n        <button type=\\\"button\\\" *ngIf=\\\"btnStatus.mode=='view'\\\" class=\\\"btn btn-primary custom r-5\\\" (click)=\\\"onBack()\\\" [disabled]=\\\"false\\\" [hidden]=\\\"false\\\">Back</button>&nbsp;\\r\\n    </div>\\r\\n    <div class=\\\"p-2\\\"> \\r\\n        <div formArrayName=\\\"SubStageFormArray\\\">\\r\\n          <div class=\\\"basic-stage\\\">\\r\\n            <div *ngFor = 'let item of metadata; let idx = index'>\\r\\n              <div *ngIf='item.visibleRow'>\\r\\n                <div class=\\\"form-group\\\" *ngIf='item.name==\\\"id\\\"; else not_id' >\\r\\n                    <label>{{item.label}}</label>\\r\\n                    <input class=\\\"form-control\\\" name=\\\"{{item.name}}\\\" id=\\\"ctrl{{idx}}\\\" type=\\\"text\\\" [formControlName]=\\\"idx\\\" placeholder=\\\"{{item.name}}\\\" readonly>\\r\\n                </div>\\r\\n                <ng-template #not_id>\\r\\n                <div class=\\\"form-group\\\" *ngIf='item.ctype==\\\"text\\\"'>\\r\\n                    <label>{{item.label}}</label>\\r\\n                    <input class=\\\"form-control\\\" name=\\\"{{item.name}}\\\" id=\\\"ctrl{{idx}}\\\" type=\\\"text\\\" [formControlName]=\\\"idx\\\" placeholder=\\\"{{item.name}}\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngIf='item.ctype==\\\"area\\\"'>\\r\\n                    <label>{{item.label}}</label>\\r\\n                    <textarea class=\\\"form-control\\\" name=\\\"{{item.name}}\\\" id=\\\"ctrl{{idx}}\\\" cols=\\\"30\\\" rows=\\\"3\\\" placeholder=\\\"{{item.name}}\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngIf='item.ctype==\\\"nohp\\\"'>\\r\\n                    <label>No HP</label>\\r\\n                    <div class=\\\"form-group form-inline\\\">            \\r\\n                        <input type=\\\"text\\\" id=\\\"np\\\" class=\\\"form-control col-3\\\" value=\\\"+62\\\" readonly>\\r\\n                        <input type=\\\"Number\\\" class=\\\"form-control col-9\\\" placeholder=\\\"{{item.name}}\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                </ng-template>\\r\\n                <span *ngIf=\\\"!IsValidItem(idx)\\\" class=\\\"inputError\\\">{{lastError}}</span>\\r\\n            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-between p-2\\\">\\r\\n    </div>\\r\\n</form>    \\r\\n</div>\";","export default \"<ng-container *ngIf='direction === \\\"asc\\\"'><fa-icon class=\\\"sort-icon\\\" [icon]='[\\\"fas\\\", \\\"chevron-up\\\"]'></fa-icon></ng-container><ng-container *ngIf='direction === \\\"desc\\\"'><fa-icon class=\\\"sort-icon\\\" [icon]='[\\\"fas\\\", \\\"chevron-down\\\"]'></fa-icon></ng-container>\\r\\n\";","export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{Title}}\\\" [hideBreadcrumbs]=\\\"false\\\">\\r\\n    </sb-dashboard-head>\\r\\n    <sb-card>\\r\\n        <div class=\\\"card-body\\\">{{Description}}</div>\\r\\n    </sb-card>\\r\\n    <sb-card>\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>\\r\\n            {{Title}}\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <sb-ng-bootstrap-table [pageSize]=\\\"6\\\">                \\r\\n            </sb-ng-bootstrap-table>\\r\\n        </div>\\r\\n    </sb-card>\\r\\n</sb-layout-dashboard>\\r\\n\";","import { NgBootstrapTableComponent } from './ng-bootstrap-table/ng-bootstrap-table.component';\r\nimport { SortIconComponent } from './sort-icon/sort-icon.component';\r\n\r\nexport const components = [NgBootstrapTableComponent, SortIconComponent];\r\n\r\nexport * from './ng-bootstrap-table/ng-bootstrap-table.component';\r\nexport * from './sort-icon/sort-icon.component';\r\n","export default \"thead > tr > th {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2Zvcm1zL2NvbXBvbmVudHMvbmctYm9vdHN0cmFwLXRhYmxlL0Q6XFxBQkdcXGFiZ25nL3NyY1xcbW9kdWxlc1xcZm9ybXNcXGNvbXBvbmVudHNcXG5nLWJvb3RzdHJhcC10YWJsZVxcbmctYm9vdHN0cmFwLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic3JjL21vZHVsZXMvZm9ybXMvY29tcG9uZW50cy9uZy1ib290c3RyYXAtdGFibGUvbmctYm9vdHN0cmFwLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksZUFBQTtBQ0RKIiwiZmlsZSI6InNyYy9tb2R1bGVzL2Zvcm1zL2NvbXBvbmVudHMvbmctYm9vdHN0cmFwLXRhYmxlL25nLWJvb3RzdHJhcC10YWJsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy92YXJpYWJsZXMuc2Nzcyc7XHJcblxyXG50aGVhZCA+IHRyID4gdGgge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59IiwidGhlYWQgPiB0ciA+IHRoIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n    QueryList,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { SBSortableHeaderDirective, SortEvent } from '@modules/details/directives';\r\n// import { Country } from '@modules/details/models';\r\nimport { TableData, MetaData } from '@modules/services/base.model';\r\nimport { CoreService } from '@modules/services/base.service';\r\nimport { DataService } from '@modules/details/services';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { AppParameter, NavIdentification, ButtonStatus } from '@app/app.parameter';\r\n\r\n@Component({\r\n    selector: 'sb-ng-bootstrap-table',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './ng-bootstrap-table.component.html',\r\n    styleUrls: ['ng-bootstrap-table.component.scss'],\r\n})\r\nexport class NgBootstrapTableComponent implements OnInit {\r\n    @Input() pageSize = 4;\r\n\r\n    titles: string[] = ['Kode','Uraian']\r\n    columns: string[] = ['name','area']\r\n    data!: TableData;\r\n    metadata: MetaData[] = [];\r\n\r\n    form!: FormGroup;\r\n\r\n    btnStatus!: ButtonStatus;\r\n    lastError!: string;\r\n    idmenu!:number;\r\n    id!:string;\r\n    op!:string;\r\n    data$!: Observable<any[]>;\r\n    total$!: Observable<number>;\r\n    sortedColumn!: string;\r\n    sortedDirection!: string;\r\n    baseURL: string = '';\r\n\r\n    @ViewChildren(SBSortableHeaderDirective) headers!: QueryList<SBSortableHeaderDirective>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private param: AppParameter,\r\n        private coreService: CoreService,\r\n        public dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {\r\n        this.ngOnInit();\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Intialization\r\n        this.idmenu = this.coreService.GetIdmenu();\r\n        const url = this.router.url;\r\n        // console.log(url);\r\n        let splitted = url.split(\"/\");\r\n        if(splitted.length === 4){\r\n            this.id = splitted[splitted.length-1];\r\n            sessionStorage.setItem(\"id\", this.id);\r\n        }else{\r\n            this.id = sessionStorage.getItem(\"id\")??\"\";\r\n        }\r\n\r\n        const json = sessionStorage.getItem(this.idmenu.toString());\r\n        if(json!=null){\r\n            const md: TableData = JSON.parse(json);\r\n            this.metadata = md.metadata;\r\n            // console.log(md);\r\n            this.form = new FormGroup({\r\n                SubStageFormArray : new FormArray([])\r\n            });\r\n            const fa = this.form.get('SubStageFormArray') as FormArray;\r\n            const arrValids : any[] = [];\r\n            const vals = md.values.find(o=>o.id === parseInt(this.id, 0));\r\n            // tslint:disable-next-line: prefer-for-of\r\n            for (let i=0; i<this.metadata.length ; i++){\r\n                const item = this.metadata[i];\r\n                if(!!vals){\r\n                    fa.push(new FormControl(vals[item.name], arrValids));\r\n                }else{\r\n                    fa.push(new FormControl(\"\", arrValids));\r\n                }\r\n            }\r\n        }\r\n\r\n        // On URL Changed Event\r\n        this.param.receiveFunctionEvent().subscribe(\r\n            (p: NavIdentification) => {\r\n                splitted = p.url.split(\"/\");\r\n                if(splitted.length === 4){\r\n                    this.id = splitted[splitted.length-1];\r\n                    sessionStorage.setItem(\"id\", this.id);\r\n                }else{\r\n                    this.id = sessionStorage.getItem(\"id\")??\"\";\r\n                }\r\n                this.op = p.op;\r\n                this.btnStatus = {\r\n                    mode : p.op?p.op:'view',\r\n                    isEditing : (p.op === 'add') || (p.op === 'edit'),\r\n                    isNew : (p.op === 'add')\r\n                };\r\n                if(!!this.id){\r\n\r\n                    // TODO optimize to only get a row data, without metadata\r\n                    this.coreService.GetMetaData().then(\r\n                        md => {\r\n                            this.data=md;\r\n                            this.metadata = md.metadata;\r\n\r\n                            this.form = new FormGroup({\r\n                                SubStageFormArray : new FormArray([])\r\n                            }, { updateOn: 'change' });\r\n\r\n                            const fa = this.form.get('SubStageFormArray') as FormArray;\r\n                            // console.log(fa);\r\n                            const arrValids : any[] = [];\r\n                            const vals = md.values.find(o=>o.id === parseInt(this.id, 0));\r\n                            // tslint:disable-next-line: prefer-for-of\r\n                            for (let i=0; i<this.metadata.length ; i++){\r\n                                const item = this.metadata[i];\r\n                                if(!!vals){\r\n                                    fa.push(new FormControl(vals[item.name], arrValids));\r\n                                }else{\r\n                                    fa.push(new FormControl(\"\", arrValids));\r\n                                }\r\n                                // console.log(item.name+'='+vals[item.name]);\r\n                            }\r\n\r\n                            this.dataService.pageSize = this.pageSize;\r\n                            this.data$ = this.dataService.data$;\r\n                            this.total$ = this.dataService.total$;\r\n\r\n                            this.baseURL = this.coreService.getBaseURL();\r\n                        }\r\n                    )\r\n                    ;\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    onSort({ column, direction }: SortEvent) {\r\n        this.sortedColumn = column;\r\n        this.sortedDirection = direction;\r\n        this.dataService.sortColumn = column;\r\n        this.dataService.sortDirection = direction;\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    onSubmit() {\r\n        const array = this.form.get('SubStageFormArray') as FormArray;\r\n\r\n        const form : Dictionary<string> = {};\r\n        const vals = this.data.values.find(o=>o.id === parseInt(this.id, 0));\r\n        const values = this.form.value.SubStageFormArray;\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for(let i=0;i<this.metadata.length;i++){\r\n            form[this.metadata[i].name] = values[i];\r\n            vals[this.metadata[i].name] = values[i];\r\n        }\r\n        const json = JSON.stringify(form);\r\n        // console.log(form);\r\n        this.coreService.GetMetaData().then(\r\n            metadata => {\r\n                // console.log(metadata);\r\n                this.data = metadata;\r\n                sessionStorage.setItem(this.idmenu.toString(), JSON.stringify(metadata));\r\n                // const fa = this.form.get('SubStageFormArray') as FormArray;\r\n                // // console.log(fa);\r\n                // const arrValids : any[] = [];\r\n                // // tslint:disable-next-line: no-shadowed-variable\r\n                // const vals = this.data.values.find(o=>o.id === parseInt(this.id, 0));\r\n                // // tslint:disable-next-line: prefer-for-of\r\n                // for (let i=0; i<this.metadata.length ; i++){\r\n                //     const item = this.metadata[i];\r\n                //     fa.push(new FormControl(vals[item.name], arrValids));\r\n                //     console.log(item.name+'='+vals[item.name]);\r\n                // }\r\n            }\r\n        );\r\n        this.onSave(form);\r\n    }\r\n    onAdd(){\r\n        const route = `${this.baseURL}/forms/${this.idmenu}/${this.id}/add/`;\r\n        this.router.navigate([route]);\r\n    }\r\n    onEdit(){\r\n        const route = `${this.baseURL}/forms/${this.idmenu}/${this.id}/edit/`;\r\n        this.router.navigate([route]);\r\n    }\r\n    onDelete(){\r\n        const route = `${this.baseURL}/details/${this.idmenu}`;\r\n        this.router.navigate([route]);\r\n    }\r\n    onSave(param: any){\r\n        this.coreService.Save(param);\r\n\r\n        let route = `${this.baseURL}/forms/${this.idmenu}/${this.id}/`;\r\n        if(this.btnStatus.isNew){\r\n            this.id = '-1'; // newid\r\n            if(false){// failed\r\n                route = `${this.baseURL}/details/${this.idmenu}`;\r\n            }\r\n        }else{\r\n\r\n        }\r\n        // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        // this.router.onSameUrlNavigation = 'reload';\r\n        this.router.navigate([route]);\r\n\r\n\r\n        // this.router.navigate([route]).then(() => {\r\n        //     window.location.reload();\r\n        // });;\r\n    }\r\n    onCancel(){\r\n        console.log(this.idmenu);\r\n        let route = `${this.baseURL}/forms/${this.idmenu}/${this.id}/`;\r\n        if(this.btnStatus.isNew){\r\n            route = `${this.baseURL}/details/${this.idmenu}`;\r\n        }\r\n        this.router.navigate([route]);\r\n    }\r\n    onBack(){\r\n        const route = `${this.baseURL}/details/${this.idmenu}`;\r\n        this.router.navigate([route]);\r\n    }\r\n\r\n    get SubStageValues() : FormArray {\r\n        return this.form.get('SubStageFormArray') as FormArray;\r\n    }\r\n    IsValidItem(indexNo: number){\r\n        // console.log(this.form);\r\n        // const fc : FormControl = <FormControl>this.SubStageValues.at(indexNo);\r\n        // if(fc!=null && fc.errors !=null && fc.touched && fc.dirty)\r\n        // {\r\n        //   this.lastError = \"no error\";\r\n        //   return true;\r\n        //   // return !(fc.errors.required || fc.errors.min || fc.errors.max || fc.errors.minlength || fc.errors.maxlength);\r\n        // }\r\n        // else\r\n        // {\r\n        //   this.lastError = \"no error\";\r\n        //   return true;\r\n        // }\r\n      }\r\n}\r\n\r\ninterface Dictionary<T> {\r\n    [Key: string]: T;\r\n}\r\n\r\n","export default \".sort-icon {\\n  height: 0.9rem;\\n  width: 0.9rem;\\n  margin-left: 0.25rem;\\n  margin-top: -0.125rem;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2Zvcm1zL2NvbXBvbmVudHMvc29ydC1pY29uL0Q6XFxBQkdcXGFiZ25nL3NyY1xcbW9kdWxlc1xcZm9ybXNcXGNvbXBvbmVudHNcXHNvcnQtaWNvblxcc29ydC1pY29uLmNvbXBvbmVudC5zY3NzIiwic3JjL21vZHVsZXMvZm9ybXMvY29tcG9uZW50cy9zb3J0LWljb24vc29ydC1pY29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxvQkFBQTtFQUNBLHFCQUFBO0VBQ0Esc0JBQUE7QUNESiIsImZpbGUiOiJzcmMvbW9kdWxlcy9mb3Jtcy9jb21wb25lbnRzL3NvcnQtaWNvbi9zb3J0LWljb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdzdHlsZXMvdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLnNvcnQtaWNvbiB7XHJcbiAgICBoZWlnaHQ6IDAuOXJlbTtcclxuICAgIHdpZHRoOiAwLjlyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcclxuICAgIG1hcmdpbi10b3A6IC0wLjEyNXJlbTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuIiwiLnNvcnQtaWNvbiB7XG4gIGhlaWdodDogMC45cmVtO1xuICB3aWR0aDogMC45cmVtO1xuICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcbiAgbWFyZ2luLXRvcDogLTAuMTI1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufSJdfQ== */\";","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'sb-sort-icon',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './sort-icon.component.html',\r\n    styleUrls: ['sort-icon.component.scss'],\r\n})\r\nexport class SortIconComponent implements OnInit {\r\n    @Input() direction!: string;\r\n\r\n    constructor() {}\r\n    ngOnInit() {}\r\n}\r\n","import { TablesComponent } from './tables/tables.component';\r\n\r\nexport const containers = [TablesComponent];\r\n\r\nexport * from './tables/tables.component';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9mb3Jtcy9jb250YWluZXJzL3RhYmxlcy90YWJsZXMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Router, ActivatedRoute, Event as NavigationEvent, NavigationStart, NavigationEnd } from '@angular/router';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { AppParameter, NavIdentification } from '@app/app.parameter';\r\nimport { CoreService } from '@modules/services/base.service';\r\nimport { DataService } from '@modules/details/services';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'sb-details',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './tables.component.html',\r\n    styleUrls: ['tables.component.scss'],\r\n})\r\nexport class TablesComponent implements OnInit {\r\n    Title!: string;\r\n    Description!: string;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private param: AppParameter,\r\n        private coreService: CoreService,\r\n        public dataService: DataService,\r\n    ) {\r\n        this.router.events\r\n            .pipe(\r\n                filter(\r\n                    (event: NavigationEvent ) => {\r\n                        return(event instanceof NavigationEnd );\r\n                    }\r\n                )\r\n            )\r\n            .subscribe((event) => {\r\n                const e = event as NavigationEnd;\r\n                const navId = new NavIdentification();\r\n                navId.url =  e.url.toString();\r\n                const pars = navId.url.split(\"/\");\r\n                const temp = pars[pars.length-1].toString();\r\n                // console.log(['add', 'edit', 'view'].includes(temp));\r\n                if(['add', 'edit', 'view'].includes(temp)){\r\n                    navId.op = pars[pars.length-1];\r\n                }else{\r\n                    navId.op = 'view';\r\n                }\r\n                // console.log(navId);\r\n                this.param.sendFunctionEvent(navId);\r\n\r\n                if(this.coreService.CanGetData()){\r\n                    this.coreService.GetMetaData().then(\r\n                        metadata => {\r\n                            this.Title = metadata.title;\r\n                            this.Description = metadata.description;\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n    }\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { SBSortableHeaderDirective } from './sortable.directive';\r\n\r\nexport const directives = [SBSortableHeaderDirective];\r\n\r\nexport * from './sortable.directive';\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n    column: string;\r\n    direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n    selector: 'th[sbSortable]',\r\n})\r\nexport class SBSortableHeaderDirective {\r\n    @Input() sbSortable!: string;\r\n    @Input() direction: SortDirection = '';\r\n    @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n    @HostBinding('class.asc') get isAscending() {\r\n        return this.direction === 'asc';\r\n    }\r\n    @HostBinding('class.desc') get isDescending() {\r\n        return this.direction === 'desc';\r\n    }\r\n    @HostListener('click') rotate() {\r\n        this.direction = rotate[this.direction];\r\n        this.sort.emit({ column: this.sbSortable, direction: this.direction });\r\n    }\r\n}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/* Module */\r\nimport { FormModule } from './forms.module';\r\n\r\n/* Containers */\r\nimport * as tablesContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as tablesGuards from './guards';\r\nimport { SBRouteData } from '@modules/navigation/models';\r\n\r\n/* Routes */\r\nexport const ROUTES1: Routes = [\r\n    {\r\n        path: '',\r\n        canActivate: [],\r\n        component: tablesContainers.TablesComponent,\r\n        data: {\r\n            title: 'Form',\r\n            breadcrumbs: [\r\n                {\r\n                    text: 'Dashboard',\r\n                    link: '/dashboard',\r\n                },\r\n                {\r\n                    text: 'Forms',\r\n                    active: true,\r\n                },\r\n            ],\r\n        } as SBRouteData,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [FormModule, RouterModule.forChild(FormsRoutingModule.Route)],\r\n    exports: [RouterModule],\r\n})\r\nexport class FormsRoutingModule {\r\n    constructor(){\r\n    }\r\n    public static Data: SBRouteData = {\r\n        title: localStorage.getItem('title')!,\r\n        breadcrumbs: [\r\n            {\r\n                text: 'Dashboard',\r\n                link: '/dashboard',\r\n            },\r\n            {\r\n                text: 'Form',\r\n                active: true,\r\n            },\r\n        ],\r\n    }\r\n    public static Route: Routes = [\r\n        {\r\n            path: '',\r\n            canActivate: [],\r\n            component: tablesContainers.TablesComponent,\r\n            data: FormsRoutingModule.Data,\r\n            children: [\r\n                {path: '', component: tablesContainers.TablesComponent, data: FormsRoutingModule.Data},\r\n                {\r\n                    path: ':idmenu',\r\n                    component: tablesContainers.TablesComponent,\r\n                    data: FormsRoutingModule.Data,\r\n                    children: [\r\n                        {path: '', component: tablesContainers.TablesComponent, data: FormsRoutingModule.Data},\r\n                        {\r\n                            path: ':id',\r\n                            component: tablesContainers.TablesComponent,\r\n                            data: FormsRoutingModule.Data,\r\n                            children: [\r\n                                {path: '', component: tablesContainers.TablesComponent, data: FormsRoutingModule.Data},\r\n                                {\r\n                                    path: ':op',\r\n                                    component: tablesContainers.TablesComponent,\r\n                                    data: FormsRoutingModule.Data\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n];\r\n}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n/* Modules */\r\nimport { AppCommonModule } from '@common/app-common.module';\r\nimport { NavigationModule } from '@modules/navigation/navigation.module';\r\n\r\n/* Components */\r\nimport * as tablesComponents from './components';\r\n\r\n/* Containers */\r\nimport * as tablesContainers from './containers';\r\n\r\n/* Directives */\r\nimport * as tablesDirectives from './directives';\r\n\r\n/* Guards */\r\nimport * as tablesGuards from './guards';\r\n\r\n/* Services */\r\nimport * as tablesServices from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n    ],\r\n    providers: [\r\n        ...tablesServices.services,\r\n        ...tablesGuards.guards,\r\n        ...tablesDirectives.directives,\r\n    ],\r\n    declarations: [\r\n        ...tablesContainers.containers,\r\n        ...tablesComponents.components,\r\n        ...tablesDirectives.directives,\r\n    ],\r\n    exports: [...tablesContainers.containers, ...tablesComponents.components],\r\n})\r\nexport class FormModule {}\r\n","import { TablesGuard } from './tables.guard';\r\n\r\nexport const guards = [TablesGuard];\r\n\r\nexport * from './tables.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TablesGuard implements CanActivate {\r\n    canActivate(): Observable<boolean> {\r\n        return of(true);\r\n    }\r\n}\r\n","import { DecimalPipe } from '@angular/common';\r\nimport { Injectable, PipeTransform } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router, RouterStateSnapshot, NavigationEnd } from '@angular/router';\r\nimport { SortDirection } from '@modules/details/directives';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\r\nimport { CoreService } from '@modules/services/base.service';\r\nimport { AppParameter } from '@app/app.parameter';\r\nimport { TableData } from '@modules/services/base.model';\r\n\r\n\r\ninterface SearchResult {\r\n    data: any[];\r\n    total: number;\r\n}\r\n\r\ninterface State {\r\n    page: number;\r\n    pageSize: number;\r\n    searchTerm: string;\r\n    sortColumn: string;\r\n    sortDirection: SortDirection;\r\n}\r\n\r\nfunction compare(v1: number | string, v2: number | string) {\r\n    return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n}\r\n\r\nfunction sort(data: any[], column: string, direction: string): any[] {\r\n    if (direction === '') {\r\n        return data;\r\n    } else {\r\n        return [...data].sort((a, b) => {\r\n            const res = compare(a[column], b[column]);\r\n            return direction === 'asc' ? res : -res;\r\n        });\r\n    }\r\n}\r\n\r\nfunction matches(country: any, term: string, pipe: PipeTransform) {\r\n    return (\r\n        country.name.toLowerCase().includes(term.toLowerCase()) ||\r\n        pipe.transform(country.area).includes(term) ||\r\n        pipe.transform(country.population).includes(term)\r\n    );\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataService {\r\n    private _loading$ = new BehaviorSubject<boolean>(true);\r\n    private _search$ = new Subject<void>();\r\n    private _data$ = new BehaviorSubject<any[]>([]);\r\n    private _total$ = new BehaviorSubject<number>(0);\r\n\r\n    private _state: State = {\r\n        page: 1,\r\n        pageSize: 4,\r\n        searchTerm: '',\r\n        sortColumn: '',\r\n        sortDirection: '',\r\n    };\r\n    idmenu!:string;\r\n    constructor(\r\n        private param: AppParameter,\r\n        private coreService: CoreService,\r\n        private pipe: DecimalPipe) {\r\n\r\n        const id = '';\r\n        const url = '';\r\n\r\n        this.param.receiveFunctionEvent().subscribe(\r\n            p => {\r\n                if(p.idmenu !== ''){\r\n                    this.idmenu = p.idmenu;\r\n\r\n                    if(this.coreService.CanGetData()){\r\n                        this.coreService.GetMetaData().then(\r\n                         metadata => {\r\n                            this._search$\r\n                            .pipe(\r\n                                tap(() => this._loading$.next(true)),\r\n                                debounceTime(120),\r\n                                switchMap(() => this._search(metadata)),\r\n                                delay(120),\r\n                                tap(() => this._loading$.next(false))\r\n                            )\r\n                            .subscribe(result => {\r\n                                this._data$.next(result.data);\r\n                                this._total$.next(result.total);\r\n                            });\r\n\r\n                            this._search$.next();\r\n                        }\r\n                    );\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n    get data$() {\r\n        return this._data$.asObservable();\r\n    }\r\n    get total$() {\r\n        return this._total$.asObservable();\r\n    }\r\n    get loading$() {\r\n        return this._loading$.asObservable();\r\n    }\r\n    get page() {\r\n        return this._state.page;\r\n    }\r\n    set page(page: number) {\r\n        this._set({ page });\r\n    }\r\n    get pageSize() {\r\n        return this._state.pageSize;\r\n    }\r\n    set pageSize(pageSize: number) {\r\n        this._set({ pageSize });\r\n    }\r\n    get searchTerm() {\r\n        return this._state.searchTerm;\r\n    }\r\n    set searchTerm(searchTerm: string) {\r\n        this._set({ searchTerm });\r\n    }\r\n    set sortColumn(sortColumn: string) {\r\n        this._set({ sortColumn });\r\n    }\r\n    set sortDirection(sortDirection: SortDirection) {\r\n        this._set({ sortDirection });\r\n    }\r\n\r\n    private _set(patch: Partial<State>) {\r\n        Object.assign(this._state, patch);\r\n        this._search$.next();\r\n    }\r\n\r\n    private _search(metadata: TableData): Observable<SearchResult> {\r\n\r\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n        // 1. sort\r\n        let data = sort(metadata.values, sortColumn, sortDirection);\r\n\r\n        // // 2. filter\r\n        data = data.filter(d => matches(d, searchTerm, this.pipe));\r\n        const total = data.length;\r\n\r\n        // 3. paginate\r\n        data = data.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n        return of({ data, total });\r\n    }\r\n}\r\n","import { DataService } from './data.service';\r\nimport { DetailsService } from './tables.service';\r\n\r\nexport const services = [DetailsService, DataService];\r\n\r\nexport * from './tables.service';\r\nexport * from './data.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n    constructor() {}\r\n\r\n    getTables$(): Observable<{}> {\r\n        return of({});\r\n    }\r\n}\r\n"]}