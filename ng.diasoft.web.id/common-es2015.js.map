{"version":3,"sources":["./src/modules/details/directives/index.ts","./src/modules/details/directives/sortable.directive.ts","./src/modules/details/services/data.service.ts","./src/modules/details/services/index.ts","./src/modules/details/services/tables.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { SBSortableHeaderDirective } from './sortable.directive';\r\n\r\nexport const directives = [SBSortableHeaderDirective];\r\n\r\nexport * from './sortable.directive';\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n    column: string;\r\n    direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n    selector: 'th[sbSortable]',\r\n})\r\nexport class SBSortableHeaderDirective {\r\n    @Input() sbSortable!: string;\r\n    @Input() direction: SortDirection = '';\r\n    @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n    @HostBinding('class.asc') get isAscending() {\r\n        return this.direction === 'asc';\r\n    }\r\n    @HostBinding('class.desc') get isDescending() {\r\n        return this.direction === 'desc';\r\n    }\r\n    @HostListener('click') rotate() {\r\n        this.direction = rotate[this.direction];\r\n        this.sort.emit({ column: this.sbSortable, direction: this.direction });\r\n    }\r\n}\r\n","import { DecimalPipe } from '@angular/common';\r\nimport { Injectable, PipeTransform } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router, RouterStateSnapshot, NavigationEnd } from '@angular/router';\r\nimport { SortDirection } from '@modules/details/directives';\r\n// import { Country } from '@modules/details/models';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\r\nimport { CoreService } from '@modules/services/base.service';\r\nimport { AppParameter } from '@app/app.parameter';\r\nimport { TableData } from '@modules/services/base.model';\r\n\r\ninterface SearchResult {\r\n    data: any[];\r\n    total: number;\r\n}\r\n\r\ninterface State {\r\n    page: number;\r\n    pageSize: number;\r\n    searchTerm: string;\r\n    sortColumn: string;\r\n    sortDirection: SortDirection;\r\n}\r\n\r\nfunction compare(v1: number | string, v2: number | string) {\r\n    return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n}\r\n\r\nfunction sort(data: any[], column: string, direction: string): any[] {\r\n    if (direction === '') {\r\n        return data;\r\n    } else {\r\n        return [...data].sort((a, b) => {\r\n            const res = compare(a[column], b[column]);\r\n            return direction === 'asc' ? res : -res;\r\n        });\r\n    }\r\n}\r\n\r\nfunction matches(country: any, term: string, pipe: PipeTransform) {\r\n    return (\r\n        country.name.toLowerCase().includes(term.toLowerCase()) ||\r\n        pipe.transform(country.area).includes(term) ||\r\n        pipe.transform(country.population).includes(term)\r\n    );\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataService {\r\n    private _loading$ = new BehaviorSubject<boolean>(true);\r\n    private _search$ = new Subject<void>();\r\n    private _data$ = new BehaviorSubject<any[]>([]);\r\n    private _total$ = new BehaviorSubject<number>(0);\r\n\r\n    private _state: State = {\r\n        page: 1,\r\n        pageSize: 4,\r\n        searchTerm: '',\r\n        sortColumn: '',\r\n        sortDirection: '',\r\n    };\r\n    kdmenu!:string;\r\n    constructor(\r\n        private param: AppParameter,\r\n        private coreService: CoreService,\r\n        private pipe: DecimalPipe) {\r\n\r\n        const id = '';\r\n        const url = '';\r\n\r\n        this.param.receiveFunctionEvent().subscribe(\r\n            p => {\r\n                if(p.kdmenu !== ''){\r\n                    this.kdmenu = p.kdmenu;\r\n                    if(this.coreService.CanGetData()){\r\n                        this.coreService.GetMetaData().then(\r\n                        metadata => {\r\n                            this._search$\r\n                            .pipe(\r\n                                tap(() => this._loading$.next(true)),\r\n                                debounceTime(120),\r\n                                switchMap(() => this._search(metadata)),\r\n                                delay(120),\r\n                                tap(() => this._loading$.next(false))\r\n                            )\r\n                            .subscribe(result => {\r\n                                this._data$.next(result.data);\r\n                                this._total$.next(result.total);\r\n                            });\r\n\r\n                            this._search$.next();\r\n                        }\r\n                    );\r\n                    }\r\n\r\n                }\r\n            }\r\n        );\r\n    }\r\n    get data$() {\r\n        return this._data$.asObservable();\r\n    }\r\n    get total$() {\r\n        return this._total$.asObservable();\r\n    }\r\n    get loading$() {\r\n        return this._loading$.asObservable();\r\n    }\r\n    get page() {\r\n        return this._state.page;\r\n    }\r\n    set page(page: number) {\r\n        this._set({ page });\r\n    }\r\n    get pageSize() {\r\n        return this._state.pageSize;\r\n    }\r\n    set pageSize(pageSize: number) {\r\n        this._set({ pageSize });\r\n    }\r\n    get searchTerm() {\r\n        return this._state.searchTerm;\r\n    }\r\n    set searchTerm(searchTerm: string) {\r\n        this._set({ searchTerm });\r\n    }\r\n    set sortColumn(sortColumn: string) {\r\n        this._set({ sortColumn });\r\n    }\r\n    set sortDirection(sortDirection: SortDirection) {\r\n        this._set({ sortDirection });\r\n    }\r\n\r\n    private _set(patch: Partial<State>) {\r\n        Object.assign(this._state, patch);\r\n        this._search$.next();\r\n    }\r\n\r\n    private _search(metadata: TableData): Observable<SearchResult> {\r\n\r\n        const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n        // 1. sort\r\n        let data = sort(metadata.values, sortColumn, sortDirection);\r\n\r\n        // // 2. filter\r\n        data = data.filter(country => matches(country, searchTerm, this.pipe));\r\n        const total = data.length;\r\n\r\n        // 3. paginate\r\n        data = data.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n        return of({ data, total });\r\n    }\r\n}\r\n","import { DataService } from './data.service';\r\nimport { DetailsService } from './tables.service';\r\n\r\nexport const services = [DetailsService, DataService];\r\n\r\nexport * from './tables.service';\r\nexport * from './data.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n    constructor() {}\r\n\r\n    getTables$(): Observable<{}> {\r\n        return of({});\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}